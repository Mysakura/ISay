<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.internetsaying.user.dao.PersonalLetterDAO">

	<resultMap type="PersonalLetter" id="letter">
		<id column="letter_id" property="letterId"/>
		<result column="person_a_id" property="personA.userId"/>
		<result column="person_b_id" property="personB.userId"/>
		<result column="person_a_name" property="personA.nickname"/>
		<result column="person_b_name" property="personB.nickname"/>
		<result column="last_time" property="lastTime"/>
	</resultMap>
	
	<resultMap type="PersonalLetterContent" id="letterContent">
		<id column="lc_id" property="lcId"/>
		<result column="letter_id" property="letter.letterId"/>
		<result column="sender_id" property="sender.userId"/>
		<result column="receiver_id" property="receiver.userId"/>
		<result column="sender_name" property="sender.nickname"/>
		<result column="receiver_name" property="receiver.nickname"/>
		<result column="letter_content" property="content"/>
		<result column="time" property="time"/>
	</resultMap>
	
	<select id="checkLetter" resultType="String">
		select letter_id from personal_letter where (person_a_id = #{personA.userId} and person_b_id = #{personB.userId}) OR (person_a_id = #{personB.userId} and person_b_id = #{personA.userId})
	</select>
	
	<insert id="addLetter" parameterType="PersonalLetter">
		insert into personal_letter values(#{letterId},#{personA.userId},#{personB.userId},#{lastTime})
	</insert>
	
	<sql id="contentFields">letter_id,sender_id,receiver_id,letter_content,time</sql>
	
	<insert id="addLetterContent" parameterType="PersonalLetterContent">
		insert into personal_letter_content(<include refid="contentFields"/>) values(#{letter.letterId},#{sender.userId},#{receiver.userId},#{content},#{time})
	</insert>
	
	<select id="getLetterList" resultMap="letter">
		select letter_id,last_time,person_a_id,ua.user_name person_a_name,person_b_id,ub.user_name person_b_name from (personal_letter left join user ua on person_a_id = ua.user_id) left join user ub on person_b_id = ub.user_id where person_a_id = #{userId} OR person_b_id = #{userId} order by last_time desc limit #{pageNo},#{pageSize}
	</select>
	
	<select id="getUserLetterCount" resultType="int">
		select count(*) from personal_letter where person_a_id = #{userId} OR person_b_id = #{userId}
	</select>
	
	<select id="getLetterContentList" resultMap="letterContent">
		select lc_id,letter_id,sender_id,us.user_name sender_name,receiver_id,ur.user_name receiver_name,letter_content,time from (personal_letter_content left join user us on sender_id = us.user_id) left join user ur on receiver_id = ur.user_id where letter_id = #{letterId} and DATE_FORMAT(time,'%Y-%m-%d') = #{date} order by time
	</select>
	
	<!-- 以下是非数据库实体 -->
	
	<resultMap type="TimeCountDTO" id="tc">
		<result column="t" property="time"/>
		<result column="c" property="count"/>
	</resultMap>
	
	<select id="getEveryMonthContentCount" resultMap="tc">
		select DATE_FORMAT(time,'%Y-%m') t,count(*) c from personal_letter_content where letter_id = #{letterId} group by DATE_FORMAT(time,'%Y-%m')
	</select>
	
	<select id="getEveryDayContentCount" resultMap="tc">
		select DATE_FORMAT(time,'%Y-%m-%d') t,count(*) c from personal_letter_content where letter_id = #{letterId} and DATE_FORMAT(time,'%Y-%m') = #{month} group by DATE_FORMAT(time,'%Y-%m-%d')
	</select>
	
</mapper>